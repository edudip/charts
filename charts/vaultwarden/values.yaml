---
## @section "Common Parameters"
##

## Docker parameters to controle the image
## @param image.repository [string] Repository URI or name
## @param image.pullPolicy [string] Kubernetes pullPolicy: can 'IfNotPresent' or 'Always'
## Ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
## @param image.tag [string] Overrides the image tag whose default is the chart appVersion
## @param image.digest [string] Sha256 value of the image. Note: if set `digest` will override the tag parameter
## Note: To get more information about the used Vaultwarden server image please read the documentation
## Ref: https://github.com/dani-garcia/vaultwarden/wiki/Which-container-image-to-use
## 
image:
  repository: vaultwarden/server
  pullPolicy: IfNotPresent
  tag: "1.28.1"

## @param podSecurityContext.enabled Switches `securityContext` for the POD
##
podSecurityContext:
  enabled: false
##  capabilities:
##    drop:
##    - ALL
##  readOnlyRootFilesystem: true
##  runAsNonRoot: true
##  runAsUser: 1000
##

## @param containerSecurityContext.enabled Switch `securityContext` for the container
##
containerSecurityContext:
  enabled: false
##  capabilities:
##    drop:
##    - ALL
##  readOnlyRootFilesystem: true
##  runAsNonRoot: true
##  runAsUser: 1000
##

## @param resources [object] Defaults for the resources used by the application
## We usually recommend not to specify default resources and to leave this as a conscious
## choice for the user. This also increases chances charts run on environments with little
## resources, such as Minikube. If you do want to specify resources, uncomment the following
## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
##
resources: {}
##  limits:
##    cpu: 100m
##    memory: 128Mi
##  requests:
##    cpu: 100m
##    memory: 128Mi

## Kubernetes autoscaling
## Ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/ 
## @param autoscaling.enabled Enable horizontal POD autoscaling
## @param autoscaling.minReplicas Minimum number of replicas
## @param autoscaling.maxReplicas Maximum number of replicas
## @param autoscaling.targetCPUUtilizationPercentage Target CPU utilization percentage
## @param autoscaling.targetMemoryUtilizationPercentage [nullable] Target Memory utilization percentage
##
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: ""

## @param replicaCount Number of replicas to deploy
## Note: This value will be ignored unless `externalDatabase.type` is not equal to "-"
##
replicaCount: 1

## @param serviceAccount.create Specifies whether a service account should be created
## @param serviceAccount.annotations [object] Annotations to add to the service account
## @param serviceAccount.name [string] The name of the service account to use
## Note: If `serviceAccount.name` not set and `serviceAccount.create` is 'true', a name is generated using the fullname template
##
serviceAccount:
  create: true
  annotations: {}
  name: ""

## @param persistence.enabled [string] Switches the persistance feature
## @param persistence.existingClaim [string] Name of an existing claim
## Note: This will ignore all the other options of `persistence` and uses the `existingClaim` instead
## @param persistence.accessModes [array] Array of accessModes
## @param persistence.size [string]
## @param persistence.storageClassName [string]
## @param persistence.volumeName [string] If `persistence.storageClassName` is set to "-" 
##
persistence:
  enabled: true
  existingClaim: ""
  accessModes:
    - ReadWriteOnce
  size: "4Gi"
  storageClassName: ""

## @skip podAnnotations
##
podAnnotations: {}

## @skip imagePullSecrets
##
imagePullSecrets: []

## @skip nameOverride
##
nameOverride: ""

## @skip fullnameOverride
##
fullnameOverride: ""

## @skip nodeSelector
##
nodeSelector: {}

## @skip tolerations
##
tolerations: []

## @skip affinity
##
affinity: {}

## @section "Traffic related parameters"
##

## @param ingress.enabled turn on/off ingress of the chart at all
## @param ingress.className [string] Name of the Ingress Class
## @param ingress.annotations [object] Annotations to add to the ingress object
## @param ingress.hosts [array] Array of host objects
## @param ingress.tls [array] Array of TLS configurations
## @param ingress.servicePort [string] Port number of the service to reach HTTP endpoint defaults is port 80
##
ingress:
  enabled: false
  className: ""
  annotations: {}
  ##  kubernetes.io/ingress.class: nginx
  ##  kubernetes.io/tls-acme: "true"
  ##
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  ##  - secretName: chart-example-tls
  ##    hosts:
  ##      - chart-example.local
  ##
  servicePort: "80"

service:
  ## @param service.type [string] Kubernetes service type
  ## @param service.ports [array] List of service ports
  ## @param service.clusterIP [string] Service cluster IP
  ## @param service.externalTrafficPolicy [array] Service external traffic policy
  ## @param service.sessionAffinity [string] Service session afffinity
  ## @param service.sessionAffinityConfig [object] Additional settings for the sessionAffinity
  ##
  type: ClusterIP
  ports:
    - name: websocket
      protocol: TCP
      targetPort: websocket
      port: 3012
    - name: http
      protocol: TCP
      targetPort: http
      port: 80
  clusterIP: ""
  externalTrafficPolicy: []
  sessionAffinity: None 
  sessionAffinityConfig: {}
  ##  clientIP:
  ##    timeoutSeconds: 300
  ##

## @section "Vaultwarden Related Parameters"
##

## @param domain [string] URL to access Vaultwarden instance
## Warning: A valid URL is required to start Vaultwarden
## Note: Can contain subdir like "https:example.com/vaultwarden" and/or also be without default port like "https://vaultwarden.example.com:30443"
## Note: Avoid URL-rewriting tricks whenever possible!
## Note: To enable U2F and FIDO2 WebAuthn authentication, you must be serving vaultwarden from an HTTPS domain with a valid certificate
## Ref: https://github.com/dani-garcia/vaultwarden/wiki/Enabling-U2F-%28and-FIDO2-WebAuthn%29-authentication
##
domain: "https://vaultwarden.example.com"

## @param dataFolder Prefix to override the location where data is saved. 
## Ref: https://github.com/dani-garcia/vaultwarden/wiki/Changing-persistent-data-location
##
dataFolder: "/data"

## @param externalDatabase.type [string] Type of the databas (protocol)
## Warning: If set to "-" internal SQLlite3 is used what will require a `persitentVolume` and causes data loss without
## Note: Can be "postgresql", "mysql" or "-"
## Note: If set to "-" it will disable generation of external databas link
## @param externalDatabase.username [string] Username of the database user
## @param externalDatabase.password [string] Password of the database
## @param externalDatabase.host [string] URN of the database server (can be IP or domain)
## @param externalDatabase.port [string] Port of the database server
## @param externalDatabase.database [string] Name of the database
## @param externalDatabase.overrideUrl [string] If `externalDatabase.type` is not "-", overrides whole database URL and ignores other parameters
## @param externalDatabase.existingSecret.name [string] Name of the secret containing complete database URL
## Note: If set `externalDatabase.username` and `externalDatabase.password` will be ignored
## @param externalDatabase.existingSecret.urlKey [string] Key of the databas URL (if let empfty "url" will be used) 
## Note: For PSQL a full PSQL Databas URL is expexted like this: "postgresql://[[user]:[password]@]host[:port][/database]"
## Ref: https://github.com/dani-garcia/vaultwarden/wiki/Using-the-PostgreSQL-Backend
## Note: For MariaDB a full MySQL Databas URL is expexted like this: "mysql://[[user]:[password]@]host[:port][/database]"
## Ref: https://github.com/dani-garcia/vaultwarden/wiki/Using-the-MariaDB-%28MySQL%29-Backend
##
externalDatabase:
  type: "-"
  username: "vaultwarden"
  password: ""
  host: ""
  port: ""
  database: ""
  overrideUrl: ""
  existingSecret:
    name: ""
    urlKey: ""


## @param smtp.urn [string] URN of the SMTP server (can be IP or domain)
## Ref: https://github.com/dani-garcia/vaultwarden/wiki/SMTP-Configuration#smtp-servers
## @param smtp.security [string] Security option of the SMTP server (can be "starttls", "force_tls", "off")
## Note: The option "force_tls" is the former "SMTP_EXPLICIT_TLS=true" and "starttls" equals "SMTP_SSL=true"
## Note: The option "starttls" will only support TLSv1.1 and TLSv1.2 (port defaults on '587')
## Note: The option "off" will provide no encryption at all and should not be used (port defaults on '25')
## @param smtp.port [string] Port of the SMTP server
## @param smtp.username [string] Username of SMTP server (leave empty if not needed)
## @param smtp.password [string] Password of SMTP server (leave empty if not needed)
## @param smtp.from [string] Email address of the sender (should not be empty or invalid)
## @param smtp.existingSecret.name [string] 
## Note: If set `smtp.username` and `smtp.password` will be ignored
## @param smtp.existingSecret.usernameKey [string] Key of the SMTP username (if let empty "username" will be used)
## @param smtp.existingSecret.passwordKey [string] Key of the SMTP password (if let empty "password" will be used)
##
smtp:
  urn: "smtp.example.com"
  security: "starttls"
  port: "587"
  username: ""
  password: ""
  from: "vaultwarden@smtp.example.com"
  existingSecret:
    name: ""
    usernameKey: ""
    passwordKey: ""


## @param signups.allowed [string] If true anyone can access the instance of Vaultwarden
## Note: Even if set to 'false' an existing user who is an organization owner or admin can still invite new users
## Note: To disable whole invitation process modify `invitationsAllowed` instead
## @param signups.domainWhitelist [string] Restrics registration to this email addresses from certain domains
## Note: Can be single domain or comma separatet list of domains like: "example.com,test.intern,foo.bar"
## Note: If set the option `signups.allowed` is ignored
##
signups:
  allowed: true
## domainWhitelist: ""

## @param invitationsAllowed [string] If set to false no invitation is possible
## Note: This disables the invitation for even existing organization owner and admin
## Note: Use `signups.allowed` instead if you want existing organization owner and admin to be able to invite users
##
invitationsAllowed: true

## @param websocketEnabled [string] WebSocket notifications are used to inform the browser and desktop Bitwarden clients
## Ref: https://github.com/dani-garcia/vaultwarden/wiki/Enabling-WebSocket-notifications
websocketEnabled: true

## @param webVaultEnabled [string] This parameter disables this static file hosting completely if set to 'false'
## Ref: https://github.com/dani-garcia/vaultwarden/wiki/Disabling-or-overriding-the-Vault-interface-hosting
##
webVaultEnabled: true

## @param showPasswordHint [string] Usually, password hints are sent by email.
## Note: If set to true, hints are also available from the password hint page, without valid eMail configuration
##
showPasswordHint: false

## @param adminToken [string] The `/admin` page will be enabled if set any token
## Warning: It's heavily recommended to activate HTTPS before enabling this feature, to avoid possible MITM attacks.
## Note: This can be any toke, for example running ```openssl rand -base64 48```
## Ref: https://github.com/dani-garcia/vaultwarden/wiki/Enabling-admin-page
##
adminToken: ""

## @param adminTokenSecret.name [string] Name of the secret containing the `ADMIN_TOKEN`
## @param adminTokenSecret.tokenKey [string] Key of the token (if let empty "token" will be used)
## Note: Read notes about `adminToken` for more inforamtion about this parameter
## Note: If set value of `adminToken` will be ignored
##
adminTokenSecret:
  name: ""
  tokenKey: ""

## @param disableAdminToken [string] If set to true built in `ADMIN_TOKEN` will be disabled
## Warning: Your administration page will be accessible to anyone with acces to the URL
## Note: Can be used, if another method is in use to authenticate to the `/admin` page
##
disableAdminToken: false

## @param yubikey.clientID [string] Your Yubikey client ID
## @param yubikey.secretKey [string] Your Yubikey secret key
## @param yubikey.server [string] If not set points to YubiCloud servers
## Ref: https://github.com/dani-garcia/vaultwarden/wiki/Enabling-Yubikey-OTP-authentication
##
yubikey:
  clientID: ""
  secretKey: ""
  server: ""

## @param rocket.tls [string] To enable HTTPS in Vaultwarden itself, set the ROCKET_TLS environment variable
## Note: This option is not recommended!
## Note: Valid format for rocketTLS looks like this: `{certs=\"/path/to/certs.pem\",key=\"/path/to/key.pem\"}`
## Ref: https://rocket.rs/
## Ref: https://github.com/dani-garcia/vaultwarden/wiki/Enabling-HTTPS#via-rocket
## @param rocket.limits [string] By default the API calls are limited to 10MB
## Ref: https://github.com/dani-garcia/vaultwarden/wiki/Changing-the-API-request-size-limit
## @param rocket.workers [string] Set the number of rocket workers by hand
## Note: If not set it spawns two times the number of CPU cores amount of worker
## Ref: https://github.com/dani-garcia/vaultwarden/wiki/Changing-the-number-of-workers
##
rocket:
   tls: ""
   limits: ""
   workers: ""

## @param writeAheadLoggingEnabled [string] Switches Write-Ahead Logging of SQLite database
## Warning: Do not change this, unless you're absolutely sure that you need to turn WAL off
## Ref: https://github.com/dani-garcia/vaultwarden/wiki/Running-without-WAL-enabled
##
writeAheadLoggingEnabled: true